{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/contact-us/contact-us.component.html","webpack:///./src/app/contact-us/contact-us.component.ts","webpack:///./src/app/contact-us/contact-us.module.ts","webpack:///./src/app/contact-us/contact-us.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/header/header.component.html","webpack:///./src/app/core/header/header.component.ts","webpack:///./src/app/core/home/home.component.html","webpack:///./src/app/core/home/home.component.ts","webpack:///./src/app/dishes/dish.model.ts","webpack:///./src/app/dishes/dish.service.ts","webpack:///./src/app/preparation-list/preparation-edit/preparation-edit.component.html","webpack:///./src/app/preparation-list/preparation-edit/preparation-edit.component.ts","webpack:///./src/app/preparation-list/preparation-list.component.html","webpack:///./src/app/preparation-list/preparation-list.component.ts","webpack:///./src/app/preparation-list/preparation-list.module.ts","webpack:///./src/app/preparation-list/preparation-list.service.ts","webpack:///./src/app/shared/data-storage.service.ts","webpack:///./src/app/shared/ingredient.model.ts","webpack:///./src/app/shared/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./dishes/dishes.module.ngfactory\": [\n\t\t\"./src/app/dishes/dishes.module.ngfactory.js\",\n\t\t\"dishes-dishes-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './auth/auth-guard.service';\nimport { PreparationListComponent } from './preparation-list/preparation-list.component';\nimport { HomeComponent } from './core/home/home.component';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'dishes', loadChildren: './dishes/dishes.module#DishesModule'},\n  { path: 'preparation-list', component: PreparationListComponent },\n  { path: 'contact-us', component: ContactUsComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, {preloadingStrategy: PreloadAllModules})],\n  exports: [RouterModule],\n  providers: [ AuthGuard ]\n})\n\nexport class AppRoutingModule { }\n","<div id=\"background\"><img src=\"./assets/background.jpg\"/></div>\n<app-header></app-header>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Planning-Your-Meal-Reservation';\n\n  ngOnInit() {\n    firebase.initializeApp({\n      apiKey: 'AIzaSyBfZmIa23t_amiXsdilDSVcGHWYHj8UgVw'\n    });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './shared/material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ContactUsModule } from './contact-us/contact-us.module';\n\nimport { FormsModule } from '@angular/forms';\nimport { AuthGuard } from './auth/auth-guard.service';\nimport { PreparationListModule } from './preparation-list/preparation-list.module';\nimport { AuthModule } from '../app/auth/auth.module';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    CoreModule,\n    PreparationListModule,\n    AuthModule,\n    AppRoutingModule,\n    ContactUsModule\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport {Injectable } from '@angular/core';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.authService.isAuthenticated();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupComponent } from '../auth/signup/signup.component';\nimport { SigninComponent } from '../auth/signin/signin.component';\n\nconst authRoutes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'signin', component: SigninComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(authRoutes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { SignupComponent } from '../auth/signup/signup.component';\nimport { SigninComponent } from '../auth/signin/signin.component';\nimport { AuthRoutingModule } from '../auth/auth-routing.module';\nimport { MaterialModule } from '../shared/material.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    SignupComponent,\n    SigninComponent\n  ],\n  imports: [\n    FormsModule,\n    MaterialModule,\n    CommonModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","import * as firebase from 'firebase';\nimport { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n  token: string;\n\n  constructor(private router: Router) {}\n\n  signupUser(email: string, password: string) {\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n    .catch(\n      error => {\n        console.log(error);\n        alert(error);\n      }\n    );\n  }\n\n  signinUser(email: string, password: string) {\n    firebase.auth().signInWithEmailAndPassword(email, password)\n    .then(\n      (response) => {\n        this.router.navigate(['/']);\n        // get token when signin\n        firebase.auth().currentUser.getIdToken()\n        .then(\n          (token: string) => this.token = token\n        );\n      }\n    ).catch(\n      error => {\n        console.log(error);\n        alert(error);\n      }\n    );\n  }\n\n  getToken() {\n    firebase.auth().currentUser.getIdToken()\n    .then(\n      (token: string) => this.token = token\n    );\n    return this.token;\n  }\n\n  isAuthenticated() {\n    return this.token != null;\n  }\n\n  logout() {\n    firebase.auth().signOut();\n    this.token = null;\n  }\n}\n","<form (ngSubmit)=\"onSignin(f)\" #f=\"ngForm\" class=\"sign-form\">\n    <div>\n      <label for=\"email\" i18n>Mail</label>\n    </div>\n    <input type=\"email\" name=\"email\" class=\"form-control\" #email=\"ngModel\" ngModel email required>\n    <div style=\"color:red\" \n      *ngIf=\"email.errors && (email.dirty || email.touched || f.submitted)\">\n      <p *ngIf=\"email.errors.required\" i18n>\n        The email is required\n      </p>\n      <p *ngIf=\"email.errors.email\" i18n>\n        The email must be correct format\n      </p>\n    </div>\n    <div>\n      <label for=\"password\" i18n>Password</label>\n    </div>\n    <input type=\"password\" name=\"password\" #password =\"ngModel\" ngModel minlength=\"6\" required>\n    <div style=\"color:red\" \n      *ngIf=\"password.errors && (password.dirty || password.touched || f.submitted)\">\n      <p *ngIf=\"password.errors.required\" i18n>\n        Password is required\n      </p>\n      <p *ngIf=\"password.errors.minlength\" i18n>\n        Password must be at least 6 characters long\n      </p>\n    </div>\n    <div class=\"sign-button\">\n      <button  mat-flat-button color=\"accent\" type=\"submit\" [disabled]=\"!f.valid\" i18n>Sign In</button>\n    </div>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSignin(form: NgForm) {\n    const email = form.value.email;\n    const password = form.value.password;\n    this.authService.signinUser(email, password);\n  }\n\n}\n","<form (ngSubmit)=\"onSignup(f)\" #f=\"ngForm\" class=\"sign-form\">\n  <div>\n    <label for=\"email\" i18n>Mail</label>\n  </div>\n  <input type=\"email\" name=\"email\" #email=\"ngModel\" ngModel email required>\n  <div style=\"color:red\" \n    *ngIf=\"email.errors && (email.dirty || email.touched || f.submitted)\">\n    <p *ngIf=\"email.errors.required\" i18n>\n        The email is required\n    </p>\n    <p *ngIf=\"email.errors.email\" i18n>\n      The email must be correct format\n    </p>\n  </div>\n  <div>\n    <label for=\"password\" i18n>Password</label>\n  </div>\n  <input type=\"password\" name=\"password\" #password =\"ngModel\" ngModel minlength=\"6\" required>\n  <div style=\"color:red\" \n    *ngIf=\"password.errors && (password.dirty || password.touched || f.submitted)\">\n    <p *ngIf=\"password.errors.required\" i18n>\n      Password is required\n    </p>\n    <p *ngIf=\"password.errors.minlength\" i18n>\n      Password must be at least 6 characters long\n    </p>\n  </div>\n  <div class=\"sign-button\">\n    <button  mat-flat-button color=\"accent\" type=\"submit\" [disabled]=\"!f.valid\" i18n>Sign Up</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSignup(form: NgForm) {\n    const email = form.value.email;\n    const password = form.value.password;\n    this.authService.signupUser(email, password);\n  }\n}\n","<form class=\"contact-us\" (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n  <div>\n    <button mat-fab color=\"primary\" type=\"submit\" i18n>Save</button>\n    <button mat-fab color=\"warn\" type=\"button\" (click)=\"onFetch()\" i18n>Fetch</button>\n    <button mat-fab color=\"accent\" type=\"button\"(click)=\"onCancel()\" i18n>Cancel</button>\n  </div>\n  <div class=\"textarea-style\">\n      <textarea type=\"text\" name=\"contact\" rows=\"20\" cols=\"50\" placeholder=\"Reservation time or personal taste preference and so on\" [ngModel]=\"contactInfo\" required i18n-placeholder></textarea>\n  </div>\n</form>","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ContactUsService } from '../contact-us/contact-us.service';\nimport { DataStorageService } from '../shared/data-storage.service';\n\n@Component({\n  selector: 'app-date',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css'],\n})\n\nexport class ContactUsComponent implements OnInit {\n  @ViewChild('f') contactForm: NgForm;\n  subscription: Subscription;\n  contactInfo: string;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private cService: ContactUsService,\n              private dataStorageService: DataStorageService ) { }\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.contactForm.reset();\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n\n  onFetch() {\n    this.contactInfo = '';\n    this.dataStorageService.fetchContactInfo();\n    this.subscription = this.cService.getContactUsChanged().subscribe((mes: string) => {\n      this.contactInfo = mes;\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    this.contactInfo = form.value.contact;\n    this.cService.addContactInfo(this.contactInfo);\n    this.dataStorageService.storeContactInfo().subscribe(\n      (response) => {\n        console.log(response);\n      }\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../shared/material.module';\nimport { ContactUsComponent } from './contact-us.component';\n\n@NgModule({\n    declarations: [\n        ContactUsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MaterialModule,\n    ],\n})\n\nexport class ContactUsModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class ContactUsService {\n    contactusChanged = new Subject<string>();\n    private contactinformation: string;\n\n    getContactInfo() {\n        return this.contactinformation;\n    }\n\n    addContactInfo(contactinformation: string) {\n        this.contactinformation = contactinformation;\n        this.contactusChanged.next(this.contactinformation.slice());\n    }\n\n    getContactUsChanged() {\n        return this.contactusChanged;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { MaterialModule } from '../shared/material.module';\nimport { AppRoutingModule } from '../app-routing.module';\n\nimport { PreparationListService } from '../preparation-list/preparation-list.service';\nimport { DishService } from '../dishes/dish.service';\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { ContactUsService } from '../contact-us/contact-us.service';\nimport { AuthService } from '../../app/auth/auth.service';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    HomeComponent\n  ],\n  imports: [\n    MaterialModule,\n    AppRoutingModule,\n    CommonModule\n  ],\n  exports: [\n    AppRoutingModule,\n    HeaderComponent\n  ],\n  providers: [\n    PreparationListService,\n    DishService,\n    DataStorageService,\n    ContactUsService,\n    AuthService\n  ]\n})\n\nexport class CoreModule { }\n","<a routerLink=\"/contact-us\">联系我们</a>","import { Component, OnInit } from '@angular/core';\nimport { DataStorageService } from '../../shared/data-storage.service';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private dataStorageService: DataStorageService, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  isAuthenticated() {\n    return this.authService.isAuthenticated();\n  }\n\n  onSaveData() {\n    this.dataStorageService.storeDishes().subscribe(\n      (response) => {\n        console.log(response);\n      }\n    );\n  }\n\n  onFetchData() {\n    this.dataStorageService.getDishes();\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n}\n","<h2 [@home] i18n>Welcome to the Meal Plan</h2>","import { Component, OnInit } from '@angular/core';\nimport { trigger, style, transition, animate, keyframes } from '@angular/animations';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [\n    trigger('home', [\n      transition('void => *', [\n        animate(1500, keyframes([\n          style({\n            transform: 'translateX(-100px)',\n            opacity: 0,\n            offset: 0\n          }),\n          style({\n            transform: 'translateX(-50px)',\n            opacity: 0.5,\n            offset: 0.3\n          }),\n          style({\n            transform: 'translateX(-20px)',\n            opacity: 0.7,\n            offset: 0.8\n          }),\n          style({\n            transform: 'translateX(0px)',\n            opacity: 1,\n            offset: 1\n          })\n        ]))\n      ]),\n    ]),\n  ]\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Ingredient } from '../shared/ingredient.model';\n\nexport class Dish {\n  name: string;\n  description: string;\n  imagePath: string;\n  ingredients: Ingredient[];\n\n  constructor(name: string, description: string, imagePath: string, ingredient: Ingredient[]) {\n    this.name = name;\n    this.description = description;\n    this.imagePath = imagePath;\n    this.ingredients = ingredient;\n  }\n}\n","import { Dish } from '../dishes/dish.model';\nimport { Injectable } from '@angular/core';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { PreparationListService } from '../preparation-list/preparation-list.service';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class DishService {\n\n  dishesChanged = new Subject<Dish[]>();\n\n  dishes: Dish[] = [\n    new Dish('Gongbao Chicken',\n             'Chinese Food',\n             'http://farm7.static.flickr.com/6127/5949832181_d73a87f299_z.jpg',\n             [\n               new Ingredient('Chicken', 1),\n               new Ingredient('Cucumber', 2)\n             ]),\n    new Dish('Hot dry noodles',\n             'Great Noodles',\n             'http://www.globaltimes.cn/Portals/0/attachment/2011/5997c21f-a92a-4850-b5a9-bd0e598fd354.jpeg',\n             [\n              new Ingredient('Noodles', 2),\n              new Ingredient('Hot Pepper', 1)\n             ]),\n  ];\n\n  constructor(private plService: PreparationListService) {}\n\n  setDishes(dishes: Dish[]) {\n    this.dishes = dishes;\n    this.dishesChanged.next(this.dishes.slice());\n  }\n\n  getDishes() {\n    return this.dishes.slice();\n  }\n\n  addIngredientsToShoppingList(dish: Dish) {\n    this.plService.addIngredients(dish.ingredients.slice());\n  }\n\n  getDish(index: number) {\n    return this.dishes[index];\n  }\n\n  addDish(dish: Dish) {\n    this.dishes.push(dish);\n    this.dishesChanged.next(this.dishes.slice());\n  }\n\n  updateDish(index: number, dish: Dish) {\n    this.dishes[index] = dish;\n    this.dishesChanged.next(this.dishes.slice());\n  }\n\n  deleteDish(index: number) {\n    this.dishes.splice(index, 1);\n    this.dishesChanged.next(this.dishes.slice());\n  }\n}\n","<form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n  <label for=\"name\" i18n>Name</label><input type=\"text\" class=\"input\" name=\"name\" ngModel required>\n  <label for=\"weight\" i18n>Weight</label><input type=\"number\" name=\"weight\" ngModel required pattern=\"^[1-9]+[0-9]*$\">\n  <div id=\"preparation-button\">\n    <button mat-fab color=\"warn\" [disabled]=\"!f.valid\" i18n>{{ editMode? 'Update' : 'Add' }}</button>\n    <button mat-fab id=\"delete-button\" *ngIf=\"editMode\" (click)=\"onDelete()\" i18n>Delete</button>\n    <button mat-fab color=\"accent\" id=\"clear-button\" type=\"button\" (click)=\"onClear()\" i18n>Clear</button>\n  </div>\n</form>","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Ingredient } from '../../shared/ingredient.model';\nimport { PreparationListService } from '../../preparation-list/preparation-list.service';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-preparation-edit',\n  templateUrl: './preparation-edit.component.html',\n  styleUrls: ['./preparation-edit.component.scss']\n})\nexport class PreparationEditComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  editNumber: number;\n  editMode = false;\n  editedItem: Ingredient;\n  @ViewChild('f') plForm: NgForm;\n\n  constructor(private plService: PreparationListService) { }\n\n  ngOnInit() {\n    this.subscription = this.plService.startedEditing\n    .subscribe(\n      (index: number) => {\n        this.editNumber = index;\n        this.editMode = true;\n        this.editedItem = this.plService.getIngredient(index);\n        this.plForm.setValue({\n          name : this.editedItem.name,\n          weight: this.editedItem.weight\n        });\n      }\n    );\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.weight);\n\n    if (this.editMode === true) {\n      this.plService.updateIngredient(this.editNumber, newIngredient);\n    } else {\n      this.plService.addIngredient(newIngredient);\n    }\n    this.editMode = false;\n    this.plForm.reset();\n  }\n\n  onClear() {\n    this.plForm.reset();\n    this.editMode = false;\n  }\n\n  onDelete() {\n    this.plService.deleteIngredient(this.editNumber);\n    this.onClear();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div id=\"preparation-list-style\">\n  <app-preparation-edit></app-preparation-edit>\n    <mat-nav-list>\n      <mat-list-item  id =\"list-item-style\" *ngFor=\"let ingredient of ingredients; let i = index\" (click)=\"onEditItem(i)\" i18n>\n        {{ ingredient.name }} ({{ ingredient.weight }})\n      </mat-list-item>\n    </mat-nav-list>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { PreparationListService } from '../preparation-list/preparation-list.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-preparation-list',\n  templateUrl: './preparation-list.component.html',\n  styleUrls: ['./preparation-list.component.scss']\n})\nexport class PreparationListComponent implements OnInit, OnDestroy {\n  ingredients: Ingredient[];\n  subscription: Subscription;\n\n  constructor(private plService: PreparationListService) { }\n\n  ngOnInit() {\n    this.ingredients = this.plService.getIngredients();\n    this.subscription = this.plService.ingredientsChanged\n    .subscribe (\n      (ingredients: Ingredient[]) => {\n        this.ingredients = ingredients;\n      }\n    );\n  }\n\n  onEditItem(index: number) {\n    this.plService.startedEditing.next(index);\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PreparationListComponent } from './preparation-list.component';\nimport { PreparationEditComponent } from './preparation-edit/preparation-edit.component';\nimport { MaterialModule } from '../shared/material.module';\n\n@NgModule({\n  declarations: [\n    PreparationListComponent,\n    PreparationEditComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MaterialModule\n  ]\n})\nexport class PreparationListModule { }\n","import { Subject } from 'rxjs';\nimport { Ingredient } from '../shared/ingredient.model';\n\nexport class PreparationListService {\n  ingredientsChanged = new Subject<Ingredient[]>();\n  startedEditing = new Subject<number>();\n\n  ingredients: Ingredient[] = [\n    new Ingredient('Apple', 5),\n    new Ingredient('Banana', 3),\n  ];\n\n  getIngredient(index: number) {\n    return this.ingredients[index];\n  }\n\n  getIngredients() {\n    return this.ingredients.slice();\n  }\n\n  addIngredient(ingredient: Ingredient) {\n    this.ingredients.push(ingredient);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  addIngredients(ingredients: Ingredient[]) {\n    this.ingredients.push(...ingredients);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  updateIngredient(index: number, newIngredient: Ingredient) {\n    this.ingredients[index] = newIngredient;\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  deleteIngredient(index: number) {\n    this.ingredients.splice(index, 1);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DishService } from '../dishes/dish.service';\nimport { AuthService } from '../auth/auth.service';\nimport { ContactUsService } from '../contact-us/contact-us.service';\nimport { Dish } from '../dishes/dish.model';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class DataStorageService {\n  constructor(private httpClient: HttpClient, private dishService: DishService, private authService: AuthService, private cService: ContactUsService) {}\n\n  storeDishes() {\n    const token = this.authService.getToken();\n    return this.httpClient.put('https://meal-plan-application.firebaseio.com/dishes.json?auth=' + token, this.dishService.getDishes());\n  }\n\n  getDishes() {\n    const token = this.authService.getToken();\n    this.httpClient.get<Dish[]>('https://meal-plan-application.firebaseio.com/dishes.json?auth=' + token).map(\n      (dishes) => {\n        for (const dish of dishes) {\n          if (!dish.ingredients) {\n            dish.ingredients = [];\n          }\n        }\n        return dishes;\n      }\n    ).subscribe(\n      (dishes: Dish[]) => {\n        this.dishService.setDishes(dishes);\n      }\n    );\n  }\n\n  storeContactInfo() {\n    const token = this.authService.getToken();\n    return this.httpClient.put('https://meal-plan-application.firebaseio.com/messages.json?auth=' + token, JSON.stringify(this.cService.getContactInfo()));\n  }\n\n  fetchContactInfo() {\n    const token = this.authService.getToken();\n    this.authService.getToken();\n    this.httpClient.get<string>('https://meal-plan-application.firebaseio.com/messages.json?auth=' + token, {\n      observe: 'body',\n      responseType: 'json',\n    }).subscribe(\n      (contact: string) => {\n        this.cService.addContactInfo(contact);\n      }\n    );\n  }\n}\n\n\n","export class Ingredient {\n  name: string;\n  weight: number;\n\n  constructor(name: string, weight: number) {\n    this.name = name;\n    this.weight = weight;\n  }\n}\n","import { MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { MatNativeDateModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [ MatButtonModule,\n             MatCheckboxModule,\n             MatGridListModule,\n             MatToolbarModule,\n             MatListModule,\n             MatMenuModule,\n             MatDatepickerModule,\n             MatFormFieldModule,\n             MatNativeDateModule,\n             MatInputModule ],\n\n  exports: [ MatButtonModule,\n             MatCheckboxModule,\n             MatGridListModule,\n             MatToolbarModule,\n             MatListModule,\n             MatMenuModule,\n             MatDatepickerModule,\n             MatFormFieldModule,\n             MatNativeDateModule,\n             MatInputModule ],\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}